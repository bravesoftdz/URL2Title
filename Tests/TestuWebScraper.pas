unit TestuWebScraper;
{

  Delphi DUnit Test Case
  ----------------------
  This unit contains a skeleton test case class generated by the Test Case Wizard.
  Modify the generated code to correctly setup and call the methods from the unit 
  being tested.

}

interface

uses
  TestFramework, System.Variants, IdSSLOpenSSL, System.Threading,
  Generics.Collections, IdHTTP, IdIOHandlerStack, System.SysUtils, IdTCPConnection,
  System.Generics.Defaults, IdTCPClient, System.Net.URLClient, System.UITypes,
  System.Classes, IdIOHandlerSocket, IdComponent, IdURI, IdBaseComponent, IdSSL,
  IdIOHandler, System.Math, System.NetEncoding, System.Types, IdGlobal,
  System.RegularExpressions;

(*
['http://stackoverflow.com/', // HTTP with EN title
  'http://habrahabr.ru/interesting/', // HTTP with RU title
  'http://www.yandex.ru/', // HTTP with RU title

  'https://encrypted.google.com/', // HTTPS with EN title
  'https://www.youtube.com/',      // HTTPS with EN title
  'https://www.python.org/',       // HTTPS with EN title
  'https://vk.com/',               // HTTPS with RU title

  'http://☃.net/',    // punycode domain
  'http://㯙㯜㯙㯟.net/', // punycode domain
  'http://💩.la',     // punycode domain

  'http://википедия.орг.рф/', // international domain
  'http://кто.рф/',           // international domain

  'http://vk.com/',  // HTTP -> HTTPS redirect
  'http://гугл.рф/', // HTTP -> HTTPS redirect

  'http://www.mindlis.ru/',                // timeout
  'http://СИБИРСКИЙ-ФЕДЕРАЛЬНЫЙ-ОКРУГ.РФ', // timeout
  'https://naydenov.tk/',                  // error: no HTTPS
  'http://youtu.be/404.',                  // 404
  'http://stackoverflow.com/404'           // 404
    ];
*)

implementation

uses ParameterizedTester, PtTypes, uWebScraper;

initialization

// Register any test cases with the test runner

RegisterTest('Parameterized tests of GetAny method',
  // non-public
  TParameterizedTester.AddTestCasesForMethod(
  TWebScraper, 'IsValidURL_RegEx',
  [
  TPtTestCase.Create(['http://[2a00:1450:4010:c08::8a]/'], True),
  TPtTestCase.Create(['http://гугл.рф'], True),
  TPtTestCase.Create(['http://💩.la'], True),
  TPtTestCase.Create(['http://a'], False),
  TPtTestCase.Create(['http://ya.ru'], True),
  TPtTestCase.Create(['test'], False),
  TPtTestCase.Create([''], False)
  ]
  ));

end.

